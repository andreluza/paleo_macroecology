
   
     model {
    
    
      #############################################################
      #                                                           #
      #                  Biological process                       #
      #                                                           #
      #############################################################
      
       # Site Occupancy Dynamics (Priors)
       
       # intercepts
       # gamma
       intercept.gamma ~ dnorm(0, 0.001)
          
       # phi
       intercept.phi ~ dnorm(0, 0.001)
          
      # ----------------------
      #     Gamma (origination)
      # ----------------------
      
      # regression coefficients
      beta.gamma.elev ~ dnorm(0, 0.001)# elevation
      beta.gamma.prec ~ dnorm(0, 0.001)# precipitation
      beta.gamma.temp ~ dnorm(0, 0.001)# temperature
      beta.gamma.lat ~ dnorm(0,0.001) # latitude
      
      # ----------------------
      #     Phi (persistence)
      # ----------------------
      
      beta.phi.prec ~ dnorm(0, 0.001)# precipitation
      beta.phi.temp ~ dnorm(0, 0.001)# temperature
      beta.phi.elev ~ dnorm(0, 0.001)# elevation
      beta.phi.lat ~ dnorm(0,0.001)
    
      ## set initial conditions for each genus
      for (i in 1:nsites) {
        psi1[i]~dunif(0,1)
      }
     
     # initial state
     
     for (g in 1:ngen) {
     
        for (i in 1:nsites) {
        
        z[g,1,i]~dbern(psi1[i]) # occupancy status initialization
                
        }
        
    }
    
    ############      Model       #############
   
   # occupancy dynamics
    
    
      for (i in 1:nsites) {
     
          for (t in 2:nint){
    
            # origination
            logit(gamma[t,i]) <-  intercept.gamma + 
                              beta.gamma.elev*elevation[t,i]+
                              beta.gamma.prec*precipitation[t,i]+
                              beta.gamma.temp*temperature[t,i]+
                              beta.gamma.lat*lat[i]
            # persistence
            logit(phi[t,i]) <-    intercept.phi + 
                              beta.phi.elev*elevation[t,i]+
                              beta.phi.prec*precipitation[t,i]+
                              beta.phi.temp*temperature[t,i]+
                              beta.phi.lat*lat[i]
    
            # dynamics across genus
              
            for (g in 1:ngen) {
                    
                # model likelihood
                ### modeling dynamics conditional on previous time realized occurrence z
                muZ[g,t,i] <- z[g,t-1,i] *  phi[t,i] + ### if occupied, p of not getting extinct/persist in the next time
                              (1-z[g,t-1,i]) *  gamma[t,i] ###  if not occupied, p of originate in the next time
                
               # realized occurrence
        		   z[g,t,i] ~ dbern(muZ[g,t,i])
            
        }#t
      
      
      } #g
      
  
    }#i
    
    #############################################################
    #                                                           #
    #         Observation process across formations             #
    #                                                           #
    #############################################################
    
    # Priors for detection probability
    # constant detection probability
    
    ###  detection intercept
    intercept.p ~ dnorm(0,0.001)
    beta.p.form ~ dnorm(0,0.001)   
    beta.p.lat ~ dnorm(0,0.001)
    beta.p.range ~ dnorm(0,0.001)
    beta.p.time ~ dnorm(0,0.001)
    
    # observation submodel
    for (g in 1:ngen) {
        for (t in 1:nint){
          for (i in 1:nsites){
    
            # model
            # p dependent on the number of formations
            logit(p[g,t,i])<- intercept.p+beta.p.form*nform[t,i]+
                                        beta.p.lat*lat[i]+
                                        beta.p.range*range[g]+
                                        beta.p.time*time[t]
            
      
            # observation
            y [g,t,i] ~ dbern(muY[g,t,i])
            # Specify the observation model conditional on occupancy state
            muY [g,t,i] <- z[g,t,i] * p[g,t,i]
                    
                  
            }
        }
    }
    
    
    # derived parameters
    # true richness
    for (t in 1:nint){
      for (i in 1:nsites) {
        SRexp[t,i] <- sum (z[,t,i])
      }
    }
    
    
    
   # change
   for (t in 2:nint) {  
    for (i in 1:nsites) {  
       
       #propcH[t,i] <-(sum(z[,t,i])-sum(z[,t-1,i]))/sum(z[,t-1,i]) ### turnover (proportional gain or loss)
       RER[t,i] <- (1-phi[t,i])/gamma[t,i] ## relative extinction rate (μ/λ; Rabosky 2018) of each time
       R0[t,i] <- (1-phi[t,i])-gamma[t,i] ## net diversification rate (r= μ - λ; Rabosky 2018) of each tim
     
      }
   }
    
        
    }## end of the model
    
    
