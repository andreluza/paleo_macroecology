
    model {
    
    #############################################################
    #                                                           #
    #                  Biological process                       #
    #                                                           #
    #############################################################
    
    
    # Specify priors
     for (g in 1:ngenus) {
    
            alpha.gamma[g] <- logit(gamma.intercept[g]) # Alpha colonization in logit space
            beta.gamma[g] ~ dnorm(0, 0.0001) # Beta colonization, second value is 1/variance
            alpha.phi[g] <- logit(phi.intercept[g]) # Alpha extinction in logit space
            beta.phi[g] ~ dnorm(0, 0.0001) # Beta extinction, second value is 1/variance
            gamma.intercept[g] ~ dunif(0,1) # Colonization intercept
            phi.intercept[g] ~ dunif(0,1) # Extinction intercept
            t0.gamma[g] ~ dunif(0,1) # t0 colonization
            t0.phi[g] ~ dunif(0,1) # t0 extinction

    }
    
    ## set initial conditions
    ## priors for occupancy in time 1
     for (g in 1:ngenus) {
     
          psi1 [g] ~ dunif (0,1)
          
     }
    
    ############ Model ########################
    
   
     for (g in 1:ngenus) {
    
          z[1,g]~dbern(psi1[g]) # occupancy status initialization
            
        
        for (t in 2:nint){
    
          # the model for each gamma and phi
          # phi
          logit (phi[t,g]) <- alpha.phi[g] + beta.phi[g]*cos(X.phi[t,g]) # Extinction at time t
          X.phi[t,g] <- 2*pi*time[t] - 2*pi*t0.phi[g] # inner part extinction cosine function
            
            
          # gamma
          logit (gamma[t,g]) <- alpha.gamma[g] + beta.gamma[g]*cos(X.gamma[t,g]) # Extinction at time t
          X.gamma[t,g] <- 2*pi*time[t] - 2*pi*t0.gamma[g] # inner part extinction cosine function
            
            
            # model likelihood
            ### modeling dynamics conditional on previous time realized occurrence z
            muZ[t,g] <- z[t-1,g] *  phi[t,g] + ### if occupied, p of not getting extinct/persist in the next time
                          (1-z[t-1,g]) *  gamma[t,g] ###  if not occupied, p of originate in the next time
            
            
            
            # bernoulli process to find realized occurrence
              
            z[t,g] ~ dbern(muZ[t,g])
            
            
    
        }#g
    }#t
    
    
    
    
            
            
            
    #############################################################
    #                                                           #
    #         Observation process across formations             #
    #                                                           #
    #############################################################
    
    # priors
    ## detection
    
    for (g in 1:ngenus) {
    
            p[g] ~ dunif (0,1)

      } 
   
    ### model
    for (k in 1:nobs){
        
        y [k] ~ dbern (muY[form[k],int[k],genus[k]])
        muY [form[k],int[k],genus[k]] <- z [int[k],genus[k]] * p[genus[k]]
        
    }
    
   
    
        
    }## end of the model
    
    
